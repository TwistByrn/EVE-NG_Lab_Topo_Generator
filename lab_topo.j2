{# Jinja2 template to generate a EVE-NG lab Topology #}
{% set count = namespace(value=0) %}
<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<lab name="{{ lab.name }}" id="{{ range(1,100) | random | to_uuid }}" version="{{ lab.version }}" scripttimeout="300" countdown="0" lock="0" author="{{ lab.author }}">
  <description>{{ lab.description }}</description>
  <topology>
    <nodes>
{% for node,node_attr in lab.topology.items() %}
      <node id="{{ node_attr.id }}" name="{{ node_attr.name}} " type="{{ node_attr.type }}" template="{{ node_attr.template }}" image="{{ node_attr.image }}" console="{{ node_attr.console }}" cpu="{{ node_attr.cpu }}" cpulimit="{{ node_attr.cpulimit }}" ram="{{ node_attr.ram }}" ethernet="{{ node_attr.ethernet }}" uuid="{{ range(1,100) | random | to_uuid }}" firstmac="50:00:00:0{{count.value}}:00:00" qemu_options="-machine type=pc,accel=kvm -serial mon:stdio -nographic -no-user-config -nodefaults -rtc base=utc -cpu host" qemu_version="2.12.0" qemu_arch="x86_64" delay="0" icon="Router.png" config="0" left="714" top="54">
{% set count.value = count.value + 1 %}        
        <interface id="0" name="Gi0/0" type="ethernet" network_id="2" labelpos="0.5" curviness="10" beziercurviness="150" midpoint="0.5" srcpos="0.15" dstpos="0.85"/>
      </node>
{% endfor %}
{% for net,net_attr in lab.network.items() %}
      <networks>
        <network id="{{ net_attr.id }}" type="{{ net_attr.type }}" name="{{ net_attr.name }}" left="774" top="94" style="Solid" linkstyle="Straight" color="" label="" visibility="{{ net_attr.visibility }}" icon="{{ net_attr.icon }}"/>
      </networks>
{% endfor %}
  </topology>
</lab>